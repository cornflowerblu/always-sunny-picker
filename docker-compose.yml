version: "3.9"
   
services:
  web: 
    build: .
    ports: 
      - "3000:3000"
    environment: 
      - GRAPHQL_ADMIN_SECRET=myadminsecretkey
      - GRAPHQL_URL=http://graphql-engine:8080/v1/graphql
      - AUTH_TOKEN=leLvvwyorNdFjbeAfVQxGuTJgUbsxc
      - COOKIE_SECRET=grYCuerNAVDGVttphyyooupFFkqTDK
      - REDIS_URL=redis://default:redispw@redis:6379
    command: ["npm", "start"]
  worker-add-sessions:
    build: .
    ports: 
      - "8000:8000"
    environment:
      - REDIS_URL=redis://default:redispw@redis:6379
      - GRAPHQL_ADMIN_SECRET=myadminsecretkey
      - GRAPHQL_URL=http://graphql-engine:8080/v1/graphql      
    command: ["node", "./workers/worker-add-sessions.js"] 
  worker-preload:
    build: .
    ports: 
      - "8001:8001"
    environment:
      - REDIS_URL=redis://default:redispw@redis:6379
      - GRAPHQL_ADMIN_SECRET=myadminsecretkey
      - GRAPHQL_URL=http://graphql-engine:8080/v1/graphql      
    command: ["node", "./workers/worker-preload.js"]    
  redis:
    image: redis
    ports: 
      - "6379:6379"
    volumes: 
      - cache:/data
    environment:
      - REDIS_PASSWORD=redispw
  db:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: goares
  graphql-engine:
    image: hasura/graphql-engine:v2.12.0
    ports:
      - "8080:8080"
    depends_on:
      - "db"
    restart: always
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:goares@db:5432/postgres      
      PG_DATABASE_URL: postgres://postgres:goares@db:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
volumes:
  cache:
    driver: local
